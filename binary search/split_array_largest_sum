class Solution {
public:

    bool isPossible(vector<int>& arr, int mid, int m){
        int saC = 1;
        int sum = 0;

        for (int i=0; i<arr.size(); i++){
            sum += arr[i];
            if (sum > mid){
                saC++;
                sum = arr[i];
            }
        }
        return saC <= m;
    }

    int splitArray(vector<int>& arr, int m) {
        int maxi = 0;
        int sum = 0;
        int n = arr.size();

        for (int i=0; i<n; i++){
            sum += arr[i];
            maxi = max(maxi, arr[i]);
        }

        if(m == arr.size()) return maxi;
        
        int lo = maxi, hi = sum;
        int ans = 0;

        while(lo <= hi){
            int mid = lo + (hi - lo)/2;
            if (isPossible(arr, mid, m)){
                ans = mid;
                hi = mid - 1;
            }
            else{
                lo = mid + 1;
            }
        }
        return ans;
    }
};